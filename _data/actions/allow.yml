name: allow
description: |
  Stops rule processing on a successful match and allows the transaction to proceed.
actiongroup: Disruptive
version: 0.1
experimental: true
data: |
  **Example:**
  ```
  # Allow unrestricted access from 192.168.1.100 
  SecRule REMOTE_ADDR "^192\.168\.1\.100$" phase:1,id:95,nolog,allow
  ```
  Prior to ModSecurity 2.5 the allow action would only affect the current phase. An allow in phase 1 would skip processing the remaining rules in phase 1 but the rules from phase 2 would execute. Starting with v2.5.0 allow was enhanced to allow for fine-grained control of what is done. The following rules now apply:

  1. If used one its own, like in the example above, allow will affect the entire transaction, stopping processing of the current phase but also skipping over all other phases apart from the logging phase. (The logging phase is special; it is designed to always execute.)
  2. If used with parameter "phase", allow will cause the engine to stop processing the current phase. Other phases will continue as normal.
  3. If used with parameter "request", allow will cause the engine to stop processing the current phase. The next phase to be processed will be phase RESPONSE_HEADERS.
  
  **Examples:**

  ```
  # Do not process request but process response.
  SecAction phase:1,allow:request,id:96

  # Do not process transaction (request and response).
  SecAction phase:1,allow,id:97
  ```

  If you want to allow a response through, put a rule in phase RESPONSE_HEADERS and simply use allow on its own:
  ```
  # Allow response through.
  SecAction phase:3,allow,id:98  
  ```