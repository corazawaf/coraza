// Copyright 2022 Juan Pablo Tosso and the OWASP Coraza contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by types/variables/generator DO NOT EDIT.

package variables

import (
    "errors"
    "strings"
)

// Name transforms a VARIABLE representation
// into a string, it's used for audit and logging
func (v RuleVariable) Name() string {
    switch v {
        {{range .}}case {{ .Key }}:
            return "{{ .Value }}"
        {{end}}
        default:
            return "INVALID_VARIABLE"
    }
}

var rulemapRev = map[string]RuleVariable{
    {{range .}}"{{ .Value }}": {{ .Key }},
    {{end}}
}

var errUnknownVariable = errors.New("unknown variable")

// Parse returns the byte interpretation
// of a variable from a string
// Returns error if there is no representation
func Parse(v string) (RuleVariable, error) {
	if v, ok := rulemapRev[strings.ToUpper(v)]; ok {
		return v, nil
	}
	return Unknown, errUnknownVariable
}
