// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: cwrpc.proto

package waf

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Phase int32

const (
	Phase_NO_PHASE         Phase = 0
	Phase_REQUEST_HEADERS  Phase = 1
	Phase_REQUEST_BODY     Phase = 2
	Phase_RESPONSE_HEADERS Phase = 3
	Phase_RESPONSE_BODY    Phase = 4
	Phase_LOGGING          Phase = 5
)

// Enum value maps for Phase.
var (
	Phase_name = map[int32]string{
		0: "NO_PHASE",
		1: "REQUEST_HEADERS",
		2: "REQUEST_BODY",
		3: "RESPONSE_HEADERS",
		4: "RESPONSE_BODY",
		5: "LOGGING",
	}
	Phase_value = map[string]int32{
		"NO_PHASE":         0,
		"REQUEST_HEADERS":  1,
		"REQUEST_BODY":     2,
		"RESPONSE_HEADERS": 3,
		"RESPONSE_BODY":    4,
		"LOGGING":          5,
	}
)

func (x Phase) Enum() *Phase {
	p := new(Phase)
	*p = x
	return p
}

func (x Phase) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Phase) Descriptor() protoreflect.EnumDescriptor {
	return file_cwrpc_proto_enumTypes[0].Descriptor()
}

func (Phase) Type() protoreflect.EnumType {
	return &file_cwrpc_proto_enumTypes[0]
}

func (x Phase) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Phase.Descriptor instead.
func (Phase) EnumDescriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{0}
}

type TransactionId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *TransactionId) Reset() {
	*x = TransactionId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionId) ProtoMessage() {}

func (x *TransactionId) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionId.ProtoReflect.Descriptor instead.
func (*TransactionId) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{0}
}

func (x *TransactionId) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Header) Reset() {
	*x = Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{1}
}

func (x *Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Header) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type NewTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wafkey         string    `protobuf:"bytes,1,opt,name=wafkey,proto3" json:"wafkey,omitempty"`
	Uri            string    `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	Method         string    `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	Protocol       string    `protobuf:"bytes,4,opt,name=protocol,proto3" json:"protocol,omitempty"`
	RequestAddr    string    `protobuf:"bytes,5,opt,name=request_addr,json=requestAddr,proto3" json:"request_addr,omitempty"`
	RequestPort    int32     `protobuf:"varint,6,opt,name=request_port,json=requestPort,proto3" json:"request_port,omitempty"`
	ServerId       string    `protobuf:"bytes,7,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	RequestHeaders []*Header `protobuf:"bytes,8,rep,name=request_headers,json=requestHeaders,proto3" json:"request_headers,omitempty"`
	Evaluate       bool      `protobuf:"varint,9,opt,name=evaluate,proto3" json:"evaluate,omitempty"`
}

func (x *NewTransaction) Reset() {
	*x = NewTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewTransaction) ProtoMessage() {}

func (x *NewTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewTransaction.ProtoReflect.Descriptor instead.
func (*NewTransaction) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{2}
}

func (x *NewTransaction) GetWafkey() string {
	if x != nil {
		return x.Wafkey
	}
	return ""
}

func (x *NewTransaction) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *NewTransaction) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *NewTransaction) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *NewTransaction) GetRequestAddr() string {
	if x != nil {
		return x.RequestAddr
	}
	return ""
}

func (x *NewTransaction) GetRequestPort() int32 {
	if x != nil {
		return x.RequestPort
	}
	return 0
}

func (x *NewTransaction) GetServerId() string {
	if x != nil {
		return x.ServerId
	}
	return ""
}

func (x *NewTransaction) GetRequestHeaders() []*Header {
	if x != nil {
		return x.RequestHeaders
	}
	return nil
}

func (x *NewTransaction) GetEvaluate() bool {
	if x != nil {
		return x.Evaluate
	}
	return false
}

type NewRequestBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid     string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Evaluate bool   `protobuf:"varint,2,opt,name=evaluate,proto3" json:"evaluate,omitempty"`
	Body     []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Mime     string `protobuf:"bytes,4,opt,name=mime,proto3" json:"mime,omitempty"`
}

func (x *NewRequestBody) Reset() {
	*x = NewRequestBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewRequestBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewRequestBody) ProtoMessage() {}

func (x *NewRequestBody) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewRequestBody.ProtoReflect.Descriptor instead.
func (*NewRequestBody) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{3}
}

func (x *NewRequestBody) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *NewRequestBody) GetEvaluate() bool {
	if x != nil {
		return x.Evaluate
	}
	return false
}

func (x *NewRequestBody) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NewRequestBody) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

type NewResponseHeaders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid            string    `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Evaluate        bool      `protobuf:"varint,2,opt,name=evaluate,proto3" json:"evaluate,omitempty"`
	ResponseHeaders []*Header `protobuf:"bytes,3,rep,name=response_headers,json=responseHeaders,proto3" json:"response_headers,omitempty"`
	Status          int32     `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Protocol        string    `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
}

func (x *NewResponseHeaders) Reset() {
	*x = NewResponseHeaders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewResponseHeaders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewResponseHeaders) ProtoMessage() {}

func (x *NewResponseHeaders) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewResponseHeaders.ProtoReflect.Descriptor instead.
func (*NewResponseHeaders) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{4}
}

func (x *NewResponseHeaders) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *NewResponseHeaders) GetEvaluate() bool {
	if x != nil {
		return x.Evaluate
	}
	return false
}

func (x *NewResponseHeaders) GetResponseHeaders() []*Header {
	if x != nil {
		return x.ResponseHeaders
	}
	return nil
}

func (x *NewResponseHeaders) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *NewResponseHeaders) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

type NewResponseBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid     string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Evaluate bool   `protobuf:"varint,2,opt,name=evaluate,proto3" json:"evaluate,omitempty"`
	Body     []byte `protobuf:"bytes,3,opt,name=body,proto3" json:"body,omitempty"`
	Finish   bool   `protobuf:"varint,4,opt,name=finish,proto3" json:"finish,omitempty"`
}

func (x *NewResponseBody) Reset() {
	*x = NewResponseBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewResponseBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewResponseBody) ProtoMessage() {}

func (x *NewResponseBody) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewResponseBody.ProtoReflect.Descriptor instead.
func (*NewResponseBody) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{5}
}

func (x *NewResponseBody) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *NewResponseBody) GetEvaluate() bool {
	if x != nil {
		return x.Evaluate
	}
	return false
}

func (x *NewResponseBody) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *NewResponseBody) GetFinish() bool {
	if x != nil {
		return x.Finish
	}
	return false
}

type TransactionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Disrupted bool   `protobuf:"varint,2,opt,name=disrupted,proto3" json:"disrupted,omitempty"`
	Pause     bool   `protobuf:"varint,3,opt,name=pause,proto3" json:"pause,omitempty"`
	Url       string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`
	Log       string `protobuf:"bytes,5,opt,name=log,proto3" json:"log,omitempty"`
	Status    int32  `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Lastphase Phase  `protobuf:"varint,7,opt,name=lastphase,proto3,enum=Phase" json:"lastphase,omitempty"`
}

func (x *TransactionStatus) Reset() {
	*x = TransactionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionStatus) ProtoMessage() {}

func (x *TransactionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionStatus.ProtoReflect.Descriptor instead.
func (*TransactionStatus) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionStatus) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionStatus) GetDisrupted() bool {
	if x != nil {
		return x.Disrupted
	}
	return false
}

func (x *TransactionStatus) GetPause() bool {
	if x != nil {
		return x.Pause
	}
	return false
}

func (x *TransactionStatus) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TransactionStatus) GetLog() string {
	if x != nil {
		return x.Log
	}
	return ""
}

func (x *TransactionStatus) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *TransactionStatus) GetLastphase() Phase {
	if x != nil {
		return x.Lastphase
	}
	return Phase_NO_PHASE
}

type TransactionFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Length int64  `protobuf:"varint,1,opt,name=length,proto3" json:"length,omitempty"`
	Mime   string `protobuf:"bytes,2,opt,name=mime,proto3" json:"mime,omitempty"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Body   []byte `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
}

func (x *TransactionFile) Reset() {
	*x = TransactionFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionFile) ProtoMessage() {}

func (x *TransactionFile) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionFile.ProtoReflect.Descriptor instead.
func (*TransactionFile) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{7}
}

func (x *TransactionFile) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *TransactionFile) GetMime() string {
	if x != nil {
		return x.Mime
	}
	return ""
}

func (x *TransactionFile) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TransactionFile) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type Collection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *Collection) Reset() {
	*x = Collection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collection) ProtoMessage() {}

func (x *Collection) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collection.ProtoReflect.Descriptor instead.
func (*Collection) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{8}
}

func (x *Collection) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Collection) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type CollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Wafkey string `protobuf:"bytes,1,opt,name=wafkey,proto3" json:"wafkey,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Key    string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CollectionRequest) Reset() {
	*x = CollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRequest) ProtoMessage() {}

func (x *CollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRequest.ProtoReflect.Descriptor instead.
func (*CollectionRequest) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{9}
}

func (x *CollectionRequest) GetWafkey() string {
	if x != nil {
		return x.Wafkey
	}
	return ""
}

func (x *CollectionRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectionRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type CollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Collections []*Collection `protobuf:"bytes,2,rep,name=collections,proto3" json:"collections,omitempty"`
}

func (x *CollectionResponse) Reset() {
	*x = CollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_cwrpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionResponse) ProtoMessage() {}

func (x *CollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_cwrpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionResponse.ProtoReflect.Descriptor instead.
func (*CollectionResponse) Descriptor() ([]byte, []int) {
	return file_cwrpc_proto_rawDescGZIP(), []int{10}
}

func (x *CollectionResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectionResponse) GetCollections() []*Collection {
	if x != nil {
		return x.Collections
	}
	return nil
}

var File_cwrpc_proto protoreflect.FileDescriptor

var file_cwrpc_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x63, 0x77, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a,
	0x0d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x22, 0x32, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x9f, 0x02, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x61, 0x66,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x77, 0x61, 0x66, 0x6b, 0x65,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x69, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0e, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08,
	0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x22, 0x68, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x08, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f,
	0x64, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69,
	0x6d, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x12, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x10, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f,
	0x6c, 0x22, 0x6d, 0x0a, 0x0f, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x76, 0x61, 0x6c,
	0x75, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x22, 0xb9, 0x01, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x72, 0x75, 0x70,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x69, 0x73, 0x72, 0x75,
	0x70, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x61, 0x75, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6f, 0x67, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x70, 0x68,
	0x61, 0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x70, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x70, 0x68, 0x61, 0x73, 0x65, 0x22, 0x65, 0x0a, 0x0f,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x69, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62,
	0x6f, 0x64, 0x79, 0x22, 0x36, 0x0a, 0x0a, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x51, 0x0a, 0x11, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x61, 0x66, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x77, 0x61, 0x66, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x57,
	0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2a, 0x72, 0x0a, 0x05, 0x70, 0x68, 0x61, 0x73, 0x65,
	0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x50, 0x48, 0x41, 0x53, 0x45, 0x10, 0x00, 0x12, 0x13,
	0x0a, 0x0f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x42,
	0x4f, 0x44, 0x59, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53,
	0x45, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x53, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x52,
	0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x5f, 0x42, 0x4f, 0x44, 0x59, 0x10, 0x04, 0x12, 0x0b,
	0x0a, 0x07, 0x4c, 0x4f, 0x47, 0x47, 0x49, 0x4e, 0x47, 0x10, 0x05, 0x32, 0x8b, 0x03, 0x0a, 0x0b,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x4e, 0x65, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x12, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x0f,
	0x2e, 0x4e, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x1a,
	0x12, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x13, 0x2e, 0x4e, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x73,
	0x1a, 0x12, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x2e, 0x4e, 0x65, 0x77, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x6f, 0x64, 0x79, 0x1a, 0x12, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x00, 0x12, 0x2b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x2d,
	0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x0e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x12, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x14, 0x5a, 0x12, 0x2f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x77, 0x61, 0x66, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_cwrpc_proto_rawDescOnce sync.Once
	file_cwrpc_proto_rawDescData = file_cwrpc_proto_rawDesc
)

func file_cwrpc_proto_rawDescGZIP() []byte {
	file_cwrpc_proto_rawDescOnce.Do(func() {
		file_cwrpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_cwrpc_proto_rawDescData)
	})
	return file_cwrpc_proto_rawDescData
}

var file_cwrpc_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_cwrpc_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_cwrpc_proto_goTypes = []interface{}{
	(Phase)(0),                 // 0: phase
	(*TransactionId)(nil),      // 1: TransactionId
	(*Header)(nil),             // 2: Header
	(*NewTransaction)(nil),     // 3: NewTransaction
	(*NewRequestBody)(nil),     // 4: NewRequestBody
	(*NewResponseHeaders)(nil), // 5: NewResponseHeaders
	(*NewResponseBody)(nil),    // 6: NewResponseBody
	(*TransactionStatus)(nil),  // 7: TransactionStatus
	(*TransactionFile)(nil),    // 8: TransactionFile
	(*Collection)(nil),         // 9: Collection
	(*CollectionRequest)(nil),  // 10: CollectionRequest
	(*CollectionResponse)(nil), // 11: CollectionResponse
}
var file_cwrpc_proto_depIdxs = []int32{
	2,  // 0: NewTransaction.request_headers:type_name -> Header
	2,  // 1: NewResponseHeaders.response_headers:type_name -> Header
	0,  // 2: TransactionStatus.lastphase:type_name -> phase
	9,  // 3: CollectionResponse.collections:type_name -> Collection
	3,  // 4: Transaction.Create:input_type -> NewTransaction
	4,  // 5: Transaction.SetRequestBody:input_type -> NewRequestBody
	5,  // 6: Transaction.SetResponseHeaders:input_type -> NewResponseHeaders
	6,  // 7: Transaction.SetResponseBody:input_type -> NewResponseBody
	1,  // 8: Transaction.Get:input_type -> TransactionId
	1,  // 9: Transaction.Close:input_type -> TransactionId
	10, // 10: Transaction.GetCollection:input_type -> CollectionRequest
	7,  // 11: Transaction.Create:output_type -> TransactionStatus
	7,  // 12: Transaction.SetRequestBody:output_type -> TransactionStatus
	7,  // 13: Transaction.SetResponseHeaders:output_type -> TransactionStatus
	7,  // 14: Transaction.SetResponseBody:output_type -> TransactionStatus
	7,  // 15: Transaction.Get:output_type -> TransactionStatus
	7,  // 16: Transaction.Close:output_type -> TransactionStatus
	11, // 17: Transaction.GetCollection:output_type -> CollectionResponse
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_cwrpc_proto_init() }
func file_cwrpc_proto_init() {
	if File_cwrpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_cwrpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewRequestBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewResponseHeaders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewResponseBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Collection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_cwrpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cwrpc_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cwrpc_proto_goTypes,
		DependencyIndexes: file_cwrpc_proto_depIdxs,
		EnumInfos:         file_cwrpc_proto_enumTypes,
		MessageInfos:      file_cwrpc_proto_msgTypes,
	}.Build()
	File_cwrpc_proto = out.File
	file_cwrpc_proto_rawDesc = nil
	file_cwrpc_proto_goTypes = nil
	file_cwrpc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TransactionClient is the client API for Transaction service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TransactionClient interface {
	Create(ctx context.Context, in *NewTransaction, opts ...grpc.CallOption) (*TransactionStatus, error)
	SetRequestBody(ctx context.Context, in *NewRequestBody, opts ...grpc.CallOption) (*TransactionStatus, error)
	SetResponseHeaders(ctx context.Context, in *NewResponseHeaders, opts ...grpc.CallOption) (*TransactionStatus, error)
	SetResponseBody(ctx context.Context, in *NewResponseBody, opts ...grpc.CallOption) (*TransactionStatus, error)
	Get(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*TransactionStatus, error)
	Close(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*TransactionStatus, error)
	GetCollection(ctx context.Context, in *CollectionRequest, opts ...grpc.CallOption) (*CollectionResponse, error)
}

type transactionClient struct {
	cc grpc.ClientConnInterface
}

func NewTransactionClient(cc grpc.ClientConnInterface) TransactionClient {
	return &transactionClient{cc}
}

func (c *transactionClient) Create(ctx context.Context, in *NewTransaction, opts ...grpc.CallOption) (*TransactionStatus, error) {
	out := new(TransactionStatus)
	err := c.cc.Invoke(ctx, "/Transaction/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) SetRequestBody(ctx context.Context, in *NewRequestBody, opts ...grpc.CallOption) (*TransactionStatus, error) {
	out := new(TransactionStatus)
	err := c.cc.Invoke(ctx, "/Transaction/SetRequestBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) SetResponseHeaders(ctx context.Context, in *NewResponseHeaders, opts ...grpc.CallOption) (*TransactionStatus, error) {
	out := new(TransactionStatus)
	err := c.cc.Invoke(ctx, "/Transaction/SetResponseHeaders", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) SetResponseBody(ctx context.Context, in *NewResponseBody, opts ...grpc.CallOption) (*TransactionStatus, error) {
	out := new(TransactionStatus)
	err := c.cc.Invoke(ctx, "/Transaction/SetResponseBody", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) Get(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*TransactionStatus, error) {
	out := new(TransactionStatus)
	err := c.cc.Invoke(ctx, "/Transaction/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) Close(ctx context.Context, in *TransactionId, opts ...grpc.CallOption) (*TransactionStatus, error) {
	out := new(TransactionStatus)
	err := c.cc.Invoke(ctx, "/Transaction/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *transactionClient) GetCollection(ctx context.Context, in *CollectionRequest, opts ...grpc.CallOption) (*CollectionResponse, error) {
	out := new(CollectionResponse)
	err := c.cc.Invoke(ctx, "/Transaction/GetCollection", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TransactionServer is the server API for Transaction service.
type TransactionServer interface {
	Create(context.Context, *NewTransaction) (*TransactionStatus, error)
	SetRequestBody(context.Context, *NewRequestBody) (*TransactionStatus, error)
	SetResponseHeaders(context.Context, *NewResponseHeaders) (*TransactionStatus, error)
	SetResponseBody(context.Context, *NewResponseBody) (*TransactionStatus, error)
	Get(context.Context, *TransactionId) (*TransactionStatus, error)
	Close(context.Context, *TransactionId) (*TransactionStatus, error)
	GetCollection(context.Context, *CollectionRequest) (*CollectionResponse, error)
}

// UnimplementedTransactionServer can be embedded to have forward compatible implementations.
type UnimplementedTransactionServer struct {
}

func (*UnimplementedTransactionServer) Create(context.Context, *NewTransaction) (*TransactionStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedTransactionServer) SetRequestBody(context.Context, *NewRequestBody) (*TransactionStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetRequestBody not implemented")
}
func (*UnimplementedTransactionServer) SetResponseHeaders(context.Context, *NewResponseHeaders) (*TransactionStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetResponseHeaders not implemented")
}
func (*UnimplementedTransactionServer) SetResponseBody(context.Context, *NewResponseBody) (*TransactionStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetResponseBody not implemented")
}
func (*UnimplementedTransactionServer) Get(context.Context, *TransactionId) (*TransactionStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedTransactionServer) Close(context.Context, *TransactionId) (*TransactionStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedTransactionServer) GetCollection(context.Context, *CollectionRequest) (*CollectionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCollection not implemented")
}

func RegisterTransactionServer(s *grpc.Server, srv TransactionServer) {
	s.RegisterService(&_Transaction_serviceDesc, srv)
}

func _Transaction_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewTransaction)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transaction/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).Create(ctx, req.(*NewTransaction))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_SetRequestBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewRequestBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).SetRequestBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transaction/SetRequestBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).SetRequestBody(ctx, req.(*NewRequestBody))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_SetResponseHeaders_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewResponseHeaders)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).SetResponseHeaders(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transaction/SetResponseHeaders",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).SetResponseHeaders(ctx, req.(*NewResponseHeaders))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_SetResponseBody_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewResponseBody)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).SetResponseBody(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transaction/SetResponseBody",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).SetResponseBody(ctx, req.(*NewResponseBody))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transaction/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).Get(ctx, req.(*TransactionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionId)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transaction/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).Close(ctx, req.(*TransactionId))
	}
	return interceptor(ctx, in, info, handler)
}

func _Transaction_GetCollection_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CollectionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TransactionServer).GetCollection(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Transaction/GetCollection",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TransactionServer).GetCollection(ctx, req.(*CollectionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Transaction_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Transaction",
	HandlerType: (*TransactionServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Transaction_Create_Handler,
		},
		{
			MethodName: "SetRequestBody",
			Handler:    _Transaction_SetRequestBody_Handler,
		},
		{
			MethodName: "SetResponseHeaders",
			Handler:    _Transaction_SetResponseHeaders_Handler,
		},
		{
			MethodName: "SetResponseBody",
			Handler:    _Transaction_SetResponseBody_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _Transaction_Get_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _Transaction_Close_Handler,
		},
		{
			MethodName: "GetCollection",
			Handler:    _Transaction_GetCollection_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cwrpc.proto",
}
