---
  meta:
    author: sts
    description: Test if disruptive actions trigger an interruption
    enabled: true
    name: disruptive_actions.yaml
  tests:
  -
    test_title: disruptive_actions
    stages:
    -
      # Phase 1
      stage:
        input:
            uri: /deny1
        output:
          triggered_rules:
            - 2
          interruption:
            status: 500
            data: ""
            rule_id: 2
            action: deny
    -
      stage:
        input:
            uri: /drop1
        output:
          triggered_rules:
            - 3
          interruption:
            status: 0
            data: ""
            rule_id: 3
            action: drop
    -
      # Phase 2
      stage:
        input:
            uri: /deny2
        output:
          triggered_rules:
            - 22
          interruption:
            status: 500
            data:
            rule_id: 22
            action: deny
    -
      stage:
        input:
            uri: /drop2
        output:
          triggered_rules:
            - 23
          interruption:
            status: 0
            data: ""
            rule_id: 23
            action: drop
      # Phase 3
    -
      stage:
        input:
            uri: /deny3
        output:
          triggered_rules:
            - 32
          interruption:
            status: 500
            data:
            rule_id: 32
            action: deny
    -
      stage:
        input:
            uri: /drop3
        output:
          triggered_rules:
            - 33
          interruption:
            status: 0
            data: ""
            rule_id: 33
            action: drop
    -
      stage:
        input:
            uri: /deny4
        output:
          triggered_rules:
            - 42
          interruption:
            status: 500
            data:
            rule_id: 42
            action: deny
    -
      stage:
        input:
            uri: /drop4
        output:
          triggered_rules:
            - 43
          interruption:
            status: 0
            data: ""
            rule_id: 43
            action: drop
    -
      stage:
        input:
            uri: /deny5
        output:
          triggered_rules:
            - 52
          interruption:
            status: 500
            data:
            rule_id: 52
            action: deny
    -
      stage:
        input:
            uri: /drop5
        output:
          triggered_rules:
            - 53
          interruption:
            status: 0
            data: ""
            rule_id: 53
            action: drop
    -
      stage:
        input:
            uri: /default/block
        output:
          triggered_rules:
            - 103
          log_contains: "WOOOP_BLOCKED_BY_CORAZA_TEST"
          interruption:
            status: 501
            data: ""
            rule_id: 103
            action: deny
  rules: |
    SecRule REQUEST_URI "/deny1$" "phase:1,id:2,log,status:500,deny"
    SecRule REQUEST_URI "/drop1$" "phase:1,id:3,log,drop"

    SecRule REQUEST_URI "/deny2$" "phase:2,id:22,log,status:500,deny"
    SecRule REQUEST_URI "/drop2$" "phase:2,id:23,log,drop"

    SecRule REQUEST_URI "/deny3$" "phase:3,id:32,log,status:500,deny"
    SecRule REQUEST_URI "/drop3$" "phase:3,id:33,log,drop"

    SecRule REQUEST_URI "/deny4$" "phase:4,id:42,log,status:500,deny"
    SecRule REQUEST_URI "/drop4$" "phase:4,id:43,log,drop"

    SecRule REQUEST_URI "/deny5$" "phase:5,id:52,log,status:500,deny"
    SecRule REQUEST_URI "/drop5$" "phase:5,id:53,log,drop"

    SecDefaultAction phase:2,deny,status:501,log,logdata:'WOOOP_BLOCKED_BY_CORAZA_TEST'
    SecRule REQUEST_URI "/default/block" "id:103,block"
