key: test-profile
profile: /etc/coraza-waf/profiles/test/test.conf
config:
  argument_separator: '&'
  default_actions: "pass"
  geoipdb: /etc/coraza-waf/geoip.db
  tmp_dir: /tmp
  unicode_map: /etc/coraza-waf/unicode.mapping
  unicode_page: 20127
  collection_timeout: 3600
  pcre_match_limit: 1500
  pcre_match_limit_recursion: 1500
  file_upload:
    path: /tmp/upload
    limit: 10
    filemode: 0640
    keep_files: false
  request_body:
    in_memory_limit: 131072
    limit: 134217728
    limit_action: ProcessPartial
  response_body:
    in_memory_limit: 131072
    limit: 134217728
    limit_action: ProcessPartial
    mime_types:
      - text/plain
      - text/html
      - text/xml
  features:
    crs: true
    audit: true
    rules: true
    content_injection: true
    request_body_access: true
    response_body_access: true
    body_inspection: true
  audit:
    files:
      # Files supports absolute path, script or https url:
      # - /opt/coraza-waf/log/test_app.log
      # - |/opt/coraza-waf/sample-script.py
      # - https://example.com/logservice
      # More information: https://jptosso.github.io/coraza-waf/      
      - /opt/coraza-waf/log/test_app.log
    directory: /opt/coraza-waf/log/audit
    dirmode: 0600
    filemode: 0600
    relevant_status: "^(?:5|4(?!04))"
    pre_rules: |
      # Here you can add some pre rules that will be evaluated before CRS
      # Please use IDs before 900000
    after_rules: |
      # Here you can add some pre rules that will be evaluated after CRS
      # This is normally used to alter previous rules
      # Keep in mind many rule modifiers are not working yet
      # Please use IDs after 1000000
    logparts:
      # 
      # request_headers: HTTP request headers
      # request_body: Full request body
      # response_headers: HTTP response headers
      # response_body: HTTP response body
      # audit_data: 
      # match_data: Matched rules
      # files_data: Uploaded files metadata      
      - request_headers
      - request_body
      - response_headers
      - response_body
      - audit_data
      - match_data
      - files_data
  crs:
    # strict: In this configuration the default disruptive action becomes 'deny'. After a
    #   rule triggers, it will stop processing the request and return an error 403.
    # scoring: Anomaly Scoring mode, log to error log, log to ModSecurity audit log.
    # By default, offending requests are blocked with an error 403 response.
    # You can also use a custom mode like this:
    # mode: |
    #   SecDefaultAction "phase:1,log,auditlog,redirect:'http://%{request_headers.host}/',tag:'Host: %{request_headers.host}'"
    #   SecDefaultAction "phase:2,log,auditlog,redirect:'http://%{request_headers.host}/',tag:'Host: %{request_headers.host}'"
    mode: scoring
    template_dir: /etc/coraza-waf/crs
    default_paranoia: 1
    enforce_reqbody_url_encoded: true
    # Here, you can specify at which cumulative anomaly score an inbound request,
    # or outbound response, gets blocked.
    #
    # Most detected inbound threats will give a critical score of 5.
    # Smaller violations, like violations of protocol/standards, carry lower scores.    
    # [ Anomaly Threshold / Paranoia Level Quadrant ]
    #
    #     High Anomaly Limit   |   High Anomaly Limit
    #     Low Paranoia Level   |   High Paranoia Level
    #     -> Fresh Site        |   -> Experimental Site
    # ------------------------------------------------------
    #     Low Anomaly Limit    |   Low Anomaly Limit
    #     Low Paranoia Level   |   High Paranoia Level
    #     -> Standard Site     |   -> High Security Site    
    inbound_anomaly_score_threshold: 100
    outbound_anomaly_score_threshold: 100
    exclusions:
      # Some well-known applications may undertake actions that appear to be
      # malicious. This includes actions such as allowing HTML or Javascript within
      # parameters. In such cases the CRS aims to prevent false positives by allowing
      # administrators to enable prebuilt, application specific exclusions on an
      # application by application basis.          
      # - drupal
      # - wordpress
      # - cpanel
      # - dokuwiki
      # - nextcloud
      # - xenforo
    allowed_http_methods:
      # HTTP methods that a client is allowed to use.
      # IMPORTANT: REST APIs may require PUT PATCH DELETE
      - GET
      - HEAD
      - POST
      - OPTIONS
    allowed_request_content_type:
      - application/x-www-form-urlencoded
      - multipart/form-data
      - multipart/related
      - text/xml
      - application/xml
      - application/soap+xml
      - application/x-amf
      - application/json
      - application/cloudevents+json
      - application/cloudevents-batch+json
      - application/octet-stream
      - application/csp-report
      - application/xss-auditor-report
      - text/plain
    allowed_http_versions:
      - HTTP/1.0
      - HTTP/1.1
      - HTTP/2
      - HTTP/2.0
    allowed_request_ct_charset:
      - utf-8
      - iso-8859-1
      - iso-8859-15
      - windows-1252
    forbidden_file_extensions:
      - .backup
      - .bak
      - .bat
      - .cdx
      - .cer
      - .cfg
      - .cmd
      - .com
      - .config
      - .conf
      - .cs
      - .csproj
      - .csr
      - .dat
      - .db
      - .dbf
      - .dll
      - .dos
      - .htr
      - .htw
      - .ida
      - .idc
      - .idq
      - .inc
      - .ini
      - .key
      - .licx
      - .lnk
      - .log
      - .mdb
      - .old
      - .pass
      - .pdb
      - .pol
      - .printer
      - .pwd
      - .rdb
      - .resources
      - .resx
      - .sql
      - .swp
      - .sys
      - .vb
      - .vbs
      - .vbproj
      - .vsdisco
      - .webinfo
      - .xsd
      - .xsx
      - .config
      - .conf
      - .db
      - .ini
      - .log
      - .old
      - .pass
      - .pdb
      - .rdb
      - .sql    
    forbidden_request_headers:
      - proxy
      - lock-token
      - content-range
      - if
    static_extensions:
      - .jpg
      - .jpeg
      - .png
      - .gif
      - .js
      - .css
      - .ico
      - .svg
      - .webp
    country_block:
      # Block by ISO 3166 country codes, requires geoip database
      # - CN
      # - RU
    max_num_args: 255
    # Sizes in bytes
    max_arg_name_length: 100
    max_arg_value_length: 400
    max_total_args_length: 64000
    max_file_size: 10485760
    max_combined_file_size: 5048576
    sampling_percentage: 100
    # Optional DoS protection against clients making requests too quickly.
    # When a client is making more than 100 requests (excluding static files) within
    # 60 seconds, this is considered a 'burst'. After two bursts, the client is
    # blocked for 600 seconds.    
    dos_block_timeout: 600
    dos_counter_threshold: 100
    dos_burst_time_slice: 60

    # The CRS can optionally check request contents for invalid UTF-8 encoding.
    # We only want to apply this check if UTF-8 encoding is actually used by the
    # site; otherwise it will result in false positives.
    validate_utf8_encoding: false

    reputation_block: true
    reputation_block_duration: 300
    ip_whitelist:
      - 127.0.0.1/32