name: Coreruleset Compatibility

on:
  push:
    branches: 
      - 'v2/*'
  pull_request:
    branches: [ v2/master ]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        lfs: true
        fetch-depth: 0 #for better blame info
    - name: Prepare libinjection and PCRE
      run: |
        git clone https://github.com/libinjection/libinjection
        gcc -std=c99 -Wall -Werror -fpic -c libinjection/src/libinjection_sqli.c -o libinjection/libinjection_sqli.o 
        gcc -std=c99 -Wall -Werror -fpic -c libinjection/src/libinjection_xss.c -o libinjection/libinjection_xss.o
        gcc -std=c99 -Wall -Werror -fpic -c libinjection/src/libinjection_html5.c -o libinjection/libinjection_html5.o
        gcc -dynamiclib -shared -o libinjection/libinjection.so libinjection/libinjection_sqli.o libinjection/libinjection_xss.o libinjection/libinjection_html5.o
        sudo cp libinjection/*.so /usr/local/lib
        sudo cp libinjection/*.o /usr/local/lib
        sudo cp libinjection/src/*.h /usr/local/include/
        sudo chmod 444 /usr/local/include/libinjection*
        sudo ldconfig
    - name: Create Caddyfile
      run: |
        cat <<EOF >>Caddyfile
        {
            auto_https off
            order coraza_waf first
            log {
              format console {
                time_format "[Mon Jan 02 15:04:05.000000 2006]"
              }
              output file /tmp/output.log
            }
        }

        :80 {
          coraza_waf {
            directives `
              SecAction "id:900005,\
          phase:1,\
          nolog,\
          pass,\
          ctl:ruleEngine=DetectionOnly,\
          ctl:ruleRemoveById=910000,\
          setvar:tx.paranoia_level=4,\
          setvar:tx.crs_validate_utf8_encoding=1,\
          setvar:tx.arg_name_length=100,\
          setvar:tx.arg_length=400,\
          setvar:tx.total_arg_length=64000,\
          setvar:tx.max_num_args=255,\
          setvar:tx.combined_file_sizes=65535
            `
          
          include /tmp/path/coraza.conf-recommended
          include /tmp/path/coreruleset/crs-setup.conf.example
          include /tmp/path/coreruleset/rules/*.conf
          }
          respond "ok"
        }
        EOF      
    - name: Go code
      run: |
        go install github.com/fzipi/go-ftw@latest
        git clone https://github.com/coreruleset/coreruleset
        mkdir caddy
        wget https://raw.githubusercontent.com/jptosso/coraza-caddy/master/caddy/main.go
        wget https://gist.githubusercontent.com/jptosso/bea81ca0de225b3e09846f627abc5b74/raw/cbec9526280400bbbdb1de51460d6dc748c116ab/.ftw.yaml
        ln -s . /tmp/path
        sed -i 's/\/some\/path\/to\/log.log/\/tmp\/output.log/g' .ftw.yaml
        sed -i 's/\/\/ _ "github.com/_ "github.com/g' main.go
        mv main.go caddy/main.go
        go get ./...
        go install caddy/main.go
    - name: Start Caddy server
      run: |
        caddy start -adapter caddyfile -config ./Caddyfile
    - name: Run go-ftw
      run: |
        go-ftw run -d coreruleset/tests/regression
